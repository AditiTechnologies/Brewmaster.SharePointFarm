{
    "Name": "SharepointFarm",
    "Description": "Creates a highly available SharePoint 2013 farm deployment.",
    "Version": "0.1.0",
    "Parameters": [
        {
            "Name": "Region",
            "Type": "String",
            "TypeHint": "AzureRegionName",
            "Description": "Azure region to which the infrastructure will be deployed."
        },
        {
            "Name": "AffinityGroup",
            "Type": "String",
            "TypeHint": "AzureAffinityGroupName",
            "Description": "Azure affinity group to which the infrastructure will be deployed."
        },
        {
            "Name": "VnetName",
            "Type": "String",
            "Description": "Azure Virtual Network for setting up highly available SharePoint 2013 farm."
        },
        {
            "Name": "DiskStore",
            "Type": "String",
            "TypeHint": "AzureStorageName",
            "Description": "Name of Azure storage account for creating VM disks."
        },
        {
            "Name": "ADCloudService",
            "Type": "String",
            "TypeHint": "AzureCloudServiceName",
            "Description": "Name of the Azure Cloud Service to which Active Directory VMs are to be deployed."
        },        
        {
            "Name": "FQDN",
            "Type": "String",
            "TypeHint": "domain",
            "Description": "Fully qualified domain name for setting up active directory in the specified Azure Virtual Network.",
            "Minimum": 1,
            "Maximum": 64
        },
        {
            "Name": "ADVMSize",
            "Type": "String",
            "TypeHint": "AzureRoleSize",
            "Description": "Size of the Active Directory VMs.",
            "Default": "Small"
        },        
        {
            "Name": "SSAOCloudService",
            "Type": "String",
            "TypeHint": "AzureCloudServiceName",
            "Description": "Name of the Azure Cloud Service."
        },
        {
            "Name": "ClusterName",
            "Type": "String",
            "Description": "Name of Windows Failover Cluster (on top of which SQL Availability group will be created). This has to be unique in the domain(setup within the virtual network).",
            "Minimum": 1,
            "Maximum": 32
        },
        {
            "Name": "AvailabilityGroupName",
            "Type": "String",
            "Description": "Name of SQL Server Availability Group. This has to be unique in the domain(setup within the virtual network).",
            "Minimum": 1,
            "Maximum": 32
        },
        {
            "Name": "NumberOfSQLNodes",
            "Type": "Number",
            "Description": "No of SQL nodes. A minimum of two are required to create SQL Server Availability Group.",
            "Default": 2,
            "Minimum": 2,
            "Maximum": 5
        },
        {
            "Name": "SQLVMSize",
            "Type": "String",
            "TypeHint": "AzureRoleSize",
            "Description": "Size of the SQL VMs.",
            "Default": "Large"
        },
        {
            "Name": "QuorumVMSize",
            "Type": "String",
            "TypeHint": "AzureRoleSize",
            "Description": "Size of the Quorum VM.",
            "Default": "Small"
        },
        {
            "Name": "SharepointCloudService",
            "Type": "String",
            "TypeHint": "AzureCloudServiceName",
            "Description": "Name of the Azure Cloud Service."
        },
        {
            "Name": "AppServerCount",
            "Type": "Number",
            "Description": "No of SharePoint App servers to be deployed.",
            "Default": 2,
            "Minimum": 1,
            "Maximum": 3
        },
        {
            "Name": "WebServerCount",
            "Type": "Number",
            "Description": "No of SharePoint web servers to be deployed.",
            "Default": 2,
            "Minimum": 1,
            "Maximum": 3
        },
        {
            "Name": "SharepointVMSize",
            "Type": "String",
            "TypeHint": "AzureRoleSize",
            "Description": "Size of the SharePoint VMs.",
            "Default": "Large"
        },
        {
            "Name": "AdminName",
            "Type": "String",
            "TypeHint": "username",
            "Description": "Name of local administrator account.",
            "Minimum": 1,
            "Maximum": 64
        },
        {
            "Name": "AdminPassword",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Password of local administrator account.",
            "MaskValue": true,
            "AllowedRegex": "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$",
			"AllowedDescription": "Complex password comprised of minimum 8 characters with atleast 1 alphabet, 1 number and 1 special character."
        },
        {
            "Name": "DSRMPassPhrase",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Safemode Password for domain",
            "MaskValue": true,
            "AllowedRegex": "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$",
			"AllowedDescription": "Complex password comprised of minimum 8 characters with atleast 1 alphabet, 1 number and 1 special character."
        },
        {
            "Name": "SqlAdminPassword",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Password for SQL sa account.",
			"MaskValue": true,
            "AllowedRegex": "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$",
			"AllowedDescription": "Complex password comprised of minimum 8 characters with atleast 1 alphabet, 1 number and 1 special character."
        },
        {
            "Name": "SqlSvcAccountName",
            "Type": "String",
            "TypeHint": "username",
            "Description": "Name of SQL service account.",
            "Minimum": 1,
            "Maximum": 64
        },
        {
            "Name": "SqlSvcAccountPassword",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Password of SQL service account.",
            "MaskValue": true,
            "AllowedRegex": "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$",
			"AllowedDescription": "Complex password comprised of minimum 8 characters with atleast 1 alphabet, 1 number and 1 special character."
        },
        {
            "Name": "FarmAdminName",
            "Type": "String",
            "TypeHint": "username",
            "Description": "Name of sharepoint farm administrator account.",
            "Minimum": 1,
            "Maximum": 64
        },
        {
            "Name": "FarmAdminPassword",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Password of sharepoint farm administrator account.",
            "MaskValue": true,
            "AllowedRegex": "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$",
			"AllowedDescription": "Complex password comprised of minimum 8 characters with atleast 1 alphabet, 1 number and 1 special character."
        },
        {
            "Name": "FarmPassphrase",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Safemode Password for sharepoint farm",
            "MaskValue": true,
            "AllowedRegex": "^(?=.*[A-Za-z])(?=.*\\d)(?=.*[$@$!%*#?&])[A-Za-z\\d$@$!%*#?&]{8,}$",
			"AllowedDescription": "Complex password comprised of minimum 8 characters with atleast 1 alphabet, 1 number and 1 special character."
        }
		{% assign fqdnSplit = FQDN | split: '.' -%}
		{% assign Domain = fqdnSplit[0] -%}
    ],
    "Network": {
        "DnsServers": [
            {
                "Name": "ad-dns1",
                "IPAddress": "10.0.0.4"
            },
            {
                "Name": "ad-dns2",
                "IPAddress": "10.0.0.5"
            }
        ],
        "LocalSites": [],
        "VirtualSites": [
            {
                "Name": "{{VnetName}}",
                "AffinityGroup": "{{AffinityGroup}}",
                "AddressSpace": [
                    "10.0.0.0/8"
                ],
                "Subnets": [
                    {
                        "Name": "ad-subnet",
                        "AddressPrefix": "10.0.0.0/24"
                    },
                    {
                        "Name": "sql-subnet",
                        "AddressPrefix": "10.20.2.0/24"
                    },
                    {
                        "Name": "app-subnet",
                        "AddressPrefix": "10.20.3.0/24"
                    }
                ],
                "DnsServers": [
                    "ad-dns1",
                    "ad-dns2"
                ],
                "VPNClientAddressSpaces": []
            }
        ]
    },
    "AffinityGroup": {
        "Name": "{{AffinityGroup}}",
        "Region": "{{Region}}",
        "Label": "Created by Brewmaster"
    },
    "StorageAccounts": [
        {
            "Name": "{{DiskStore}}",
            "AffinityGroup": "{{AffinityGroup}}",
            "Region": "{{Region}}",
            "Description": "A non-georedundant disk store",
            "DisableGeoReplication": true
        }
    ],
    "CloudServices": [
        {
            "Name": "{{ADCloudService}}",
            "AffinityGroup": "{{AffinityGroup}}",
            "Region": "{{Region}}",
            "Description": "Active Directory deployment.",
            "Deployment": {
                "VirtualNetwork": "{{VnetName}}",
                "VirtualMachines": [
                    {
                        "Name": "root-dc1",
                        "RoleSize": "{{ADVMSize}}",
                        "Subnets": [
                            "ad-subnet"
                        ],
                        "AvailabilitySet": "ad-avs",
                        "OsVirtualDisk": {
                            "OsType": "Windows",
                            "OsImageName": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-*"
                        },
                        "DataVirtualDisks": [
                            {
                                "DiskId": "disk0",
                                "Lun": 0,
                                "LogicalSizeInGB": 40
                            }
                        ],
                        "WindowsConfigSet": {
                            "LocalAdminCredentialId": "DomainAdmin",
                            "EnableAutomaticUpdates": false,
                            "ChangePasswordAtLogon": false,
                            "DisableRdp": false
                        },
                        "ConfigSets": [
                            "RootDomainController"
                        ],
                        "DeploymentGroup": "ADForest"
                    }
                    ,{
                        "Name": "dc2",
                        "RoleSize": "{{ADVMSize}}",
                        "Subnets": [
                            "ad-subnet"
                        ],
                        "AvailabilitySet": "ad-avs",
                        "OsVirtualDisk": {
                            "OsType": "Windows",
                            "OsImageName": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-*"
                        },
                        "DataVirtualDisks": [
                            {
                                "DiskId": "disk0",
                                "Lun": 0,
                                "LogicalSizeInGB": 40
                            }
                        ],
                        "WindowsConfigSet": {
                            "LocalAdminCredentialId": "DomainAdmin",
                            "EnableAutomaticUpdates": false,
                            "ChangePasswordAtLogon": false,
                            "DisableRdp": false
                        },
                        "ConfigSets": [
                            "DomainController"
                        ],
                        "DeploymentGroup": "ADDomainController"
                    }
                ],
                "DnsServers": [
                    {
                        "Name": "DCLoopback",
                        "IPAddress": "127.0.0.1"
                    }
                ],
                "DiskStorageAccount": "{{DiskStore}}"
            }
        },
        {
            "Name": "{{SSAOCloudService}}",
            "AffinityGroup": "{{AffinityGroup}}",
            "Region": "{{Region}}",
            "Description": "SQL Server AlwaysOn deployment.",
            "Deployment": {
                "VirtualNetwork": "{{VnetName}}",
                "VirtualMachines": [
                    {
                        "Name": "quorum",
                        "RoleSize": "{{QuorumVMSize}}",
                        "Subnets": [
                            "sql-subnet"
                        ],
                        "AvailabilitySet": "sqlha-avs",
                        "OsVirtualDisk": {
                            "OsType": "Windows",
                            "OsImageName": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-*"
                        },
                        "DataVirtualDisks": [
                            {
                                "DiskId": "disk0",
                                "Lun": 0,
                                "LogicalSizeInGB": 40
                            }
                        ],
                        "WindowsConfigSet": {
                            "LocalAdminCredentialId": "DomainAdmin:local",
                            "EnableAutomaticUpdates": false,
                            "ChangePasswordAtLogon": false,
                            "DisableRdp": false,
                            "DomainJoinSettings": {
                                "DomainToJoin": "{{FQDN}}",
                                "CredentialId": "DomainJoinCred"
                            }
                        },
                        "ConfigSets": [
                            "SSAONode",
                            "FailoverCluster"
                        ],
                        "DeploymentGroup": "SqlAlwaysOn"
                    }
{% for i in (1..NumberOfSQLNodes) -%}
                    ,{
                        "Name": "sql{{i}}",
                        "RoleSize": "{{SQLVMSize}}",
                        "Subnets": [
                            "sql-subnet"
                        ],
                        "AvailabilitySet": "sqlha-avs",
                        "OsVirtualDisk": {
                            "OsType": "Windows",
                            "OsImageName": "fb83b3509582419d99629ce476bcb5c8__*SQL-Server-2014*ENT*"
                        },
                        "DataVirtualDisks": [
                            {
                                "DiskId": "disk0",
                                "Lun": 0,
                                "LogicalSizeInGB": 40
                            }
                        ],
                        "WindowsConfigSet": {
                            "LocalAdminCredentialId": "DomainAdmin:local",
                            "EnableAutomaticUpdates": false,
                            "ChangePasswordAtLogon": false,
                            "DisableRdp": false,
                            "DomainJoinSettings": {
                                "DomainToJoin": "{{FQDN}}",
                                "CredentialId": "DomainJoinCred"
                            }
                        },
                        "ConfigSets": [
                            "SSAONode",
                            "FailoverCluster",
                            "SqlAlwaysOnNode"
                        ],
                        "DeploymentGroup": "SqlAlwaysOn"
                    }
{% endfor -%}
                ],
                "DiskStorageAccount": "{{DiskStore}}"
            }
        },
        {
            "Name": "{{SharepointCloudService}}",
            "AffinityGroup": "{{AffinityGroup}}",
            "Region": "{{Region}}",
            "Description": "SharePoint farm deployment.",
            "Deployment": {
                "VirtualNetwork": "{{VnetName}}",
                "VirtualMachines": [
                    {
                        "Name": "spapp1",
                        "RoleSize": "{{SharepointVMSize}}",
                        "Subnets": [
                            "app-subnet"
                        ],
                        "AvailabilitySet": "sharepoint-avs",
                        "OsVirtualDisk": {
                            "OsType": "Windows",
                            "OsImageName": "c6e0f177abd8496e934234bd27f46c5d__SharePoint-2013-*"
                        },
                        "DataVirtualDisks": [
                            {
                                "DiskId": "disk0",
                                "Lun": 0,
                                "LogicalSizeInGB": 40
                            }
                        ],
                        "WindowsConfigSet": {
                            "LocalAdminCredentialId": "DomainAdmin:local",
                            "EnableAutomaticUpdates": false,
                            "ChangePasswordAtLogon": false,
                            "DisableRdp": false,
                            "DomainJoinSettings": {
                                "DomainToJoin": "{{FQDN}}",
                                "CredentialId": "DomainJoinCred"
                            }
                        },
                        "ConfigSets": [
                            "SharepointAppServerAdminNode",
							"SharepointAppServerNode"
                        ],
                        "DeploymentGroup": "SharepointFarm"
                    }
{% for i in (2..AppServerCount) -%}
                    ,{
                        "Name": "spapp{{i}}",
                        "RoleSize": "{{SharepointVMSize}}",
                        "Subnets": [
                            "app-subnet"
                        ],
                        "AvailabilitySet": "spapp-avs",
                        "OsVirtualDisk": {
                            "OsType": "Windows",
                            "OsImageName": "c6e0f177abd8496e934234bd27f46c5d__SharePoint-2013-*"
                        },
                        "DataVirtualDisks": [
                            {
                                "DiskId": "disk0",
                                "Lun": 0,
                                "LogicalSizeInGB": 40
                            }
                        ],
                        "WindowsConfigSet": {
                            "LocalAdminCredentialId": "DomainAdmin:local",
                            "EnableAutomaticUpdates": false,
                            "ChangePasswordAtLogon": false,
                            "DisableRdp": false,
                            "DomainJoinSettings": {
                                "DomainToJoin": "{{FQDN}}",
                                "CredentialId": "DomainJoinCred"
                            }
                        },
                        "ConfigSets": [
                            "SharepointAppServerNode"
                        ],
                        "DeploymentGroup": "SharepointFarm"
                    }
{% endfor -%}
                    ,{
                        "Name": "spweb1",
                        "RoleSize": "{{SharepointVMSize}}",
                        "Subnets": [
                            "app-subnet"
                        ],
                        "AvailabilitySet": "spweb-avs",
                        "OsVirtualDisk": {
                            "OsType": "Windows",
                            "OsImageName": "c6e0f177abd8496e934234bd27f46c5d__SharePoint-2013-*"
                        },
                        "DataVirtualDisks": [
                            {
                                "DiskId": "disk0",
                                "Lun": 0,
                                "LogicalSizeInGB": 40
                            }
                        ],
                        "WindowsConfigSet": {
                            "LocalAdminCredentialId": "DomainAdmin:local",
                            "EnableAutomaticUpdates": false,
                            "ChangePasswordAtLogon": false,
                            "DisableRdp": false,
                            "DomainJoinSettings": {
                                "DomainToJoin": "{{FQDN}}",
                                "CredentialId": "DomainJoinCred"
                            }
                        },
                        "ConfigSets": [
                            "SharepointWebServerNode"
                        ],
                        "DeploymentGroup": "SharepointFarm"
                    }
{% for i in (2..WebServerCount) -%}
                    ,{
                        "Name": "spweb{{i}}",
                        "RoleSize": "{{SharepointVMSize}}",
                        "Subnets": [
                            "app-subnet"
                        ],
                        "AvailabilitySet": "sharepoint-avs",
                        "OsVirtualDisk": {
                            "OsType": "Windows",
                            "OsImageName": "c6e0f177abd8496e934234bd27f46c5d__SharePoint-2013-*"
                        },
                        "DataVirtualDisks": [
                            {
                                "DiskId": "disk0",
                                "Lun": 0,
                                "LogicalSizeInGB": 40
                            }
                        ],
                        "WindowsConfigSet": {
                            "LocalAdminCredentialId": "DomainAdmin:local",
                            "EnableAutomaticUpdates": false,
                            "ChangePasswordAtLogon": false,
                            "DisableRdp": false,
                            "DomainJoinSettings": {
                                "DomainToJoin": "{{FQDN}}",
                                "CredentialId": "DomainJoinCred"
                            }
                        },
                        "ConfigSets": [
                            "SharepointWebServerNode"
                        ],
                        "DeploymentGroup": "SharepointFarm"
                    }
{% endfor -%}
                ],
                "DiskStorageAccount": "{{DiskStore}}"
            }
        }
    ],
    "DeploymentGroups": [
        {
            "Name": "ADForest",
            "Description": "Must fully deploy AD forest root before any other domain controllers or domain VMs."
        },
        {
            "Name": "SqlAlwaysOn",
            "Description": "Sql AlwaysOn VMs"
        },
        {
            "Name": "SharepointFarm",
            "Description": "Sharepoint Vms"
        },
		{
            "Name": "ADDomainController",
            "Description": "Additional AD domain controllers."
        }
    ],
    "Credentials": [
        {
            "Name": "DomainAdmin",
            "UserName": "{{Domain}}\\{{AdminName}}",
            "Password": "{{AdminPassword}}"
        },
        {
            "Name": "DomainAdmin:local",
            "UserName": "{{AdminName}}",
            "Password": "{{AdminPassword}}"
        },
        {
            "Name": "DomainJoinCred",
            "UserName": "{{Domain}}\\{{AdminName}}",
            "Password": "{{AdminPassword}}"
        }
    ],
    "ConfigSets": [
        {
            "Name": "RootDomainController",
            "Description": "Active Directory root DC",
            "Endpoints": [],
            "ConfigurationIds": [
                "SetupADNode",
                "SetupADForest"
            ]
        },
        {
            "Name": "DomainController",
            "Description": "Active Directory child DC",
            "Endpoints": [],
            "ConfigurationIds": [
                "SetupADNode",
                "SetupADDomainController"
            ]
        },      
        {
            "Name": "SSAONode",
            "Description": "All VMs within the SqlAlwaysOn deployment. This is typically made of the SQL nodes and a single quorum node.",
            "Endpoints": [],
            "ConfigurationIds": [
                "InitializeSSAONode"
            ]
        },
        {
            "Name": "FailoverCluster",
            "Description": "Failover cluster setup",
            "Endpoints": [],
            "ConfigurationIds": [
                "SetupFailoverCluster"
            ]
        },
        {
            "Name": "SqlAlwaysOnNode",
            "Description": "All SQL VMs within the SqlAlwaysOn deployment.",
            "Endpoints": [
                {
                    "Name": "AGListener",
                    "LocalPort": 1433,
                    "Protocol": "tcp",
                    "Port": 1433,
                    "EnableDirectServerReturn": true,
                    "Rules": [],
                    "LoadBalancerProbe": {
                        "Name": "AGListener-LB",
                        "Protocol": "tcp",
                        "Port": 59999
                    }
                }
            ],
            "ConfigurationIds": [
                "SetupSqlAlwaysOn"
            ]
        },
        {
            "Name": "SharepointAppServerAdminNode",
            "Description": "SharePoint App Server AdminSite VM.",
            "Endpoints": [
                {
                    "Name": "AdminSite",
                    "LocalPort": 20000,
                    "Protocol": "tcp",
                    "Port": 20000
                }
            ],
            "ConfigurationIds": []
        },
		{
            "Name": "SharepointAppServerNode",
            "Description": "SharePoint App Server VM.",
            "Endpoints": [],            
            "ConfigurationIds": [
                "SetupSharepointFarm"
            ]
        },
        {
            "Name": "SharepointWebServerNode",
            "Description": "SharePoint Web Server VMs.",
            "Endpoints": [
                {
                    "Name": "web",
                    "LocalPort": 80,
                    "Protocol": "tcp",
                    "Port": 80,
                    "LoadBalancerProbe": {
                        "Name": "spweb-http",
                        "Protocol": "http",
                        "Port": 8080,
                        "Path": "/"
                    }
                }
            ],
            "ConfigurationIds": [
                "SetupSharepointFarm",
                "ProvisionHighlyAvailableDefaultSite"
            ]
        }
    ],
    "Configurations": [
        {
            "Name": "SetupADNode",
            "Description": "Install AD Domain Services, Group Policy Management Console, and DNS.",
            "Resources": [
				{
                    "Type": "xFormatDisks",
                    "ImportModule": "xAzureDataDisks",
                    "ImportTypeName": "ADITI_xFormatDisks",
                    "Name": "FormatRawDisks",
                    "Args": {
                        "FirstDriveLetter": "F"
                    }
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "ADDomainServices",
                    "Args": {
                        "Name": "AD-Domain-Services",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-ADDomainServices.log"
                    }
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "GroupPolicyManagementConsole",
                    "Args": {
                        "Name": "GPMC",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-GPMC.log"
                    }
                }
            ],
            "Args": {}
        },
        {
            "Name": "SetupADForest",
            "Description": "Configure this server as the first Active Directory domain controller in a new forest. See http://technet.microsoft.com/en-us/library/jj574166.aspx",
            "Resources": [
                {
                    "Credential": null,
                    "GetScript": "return @{Domain = Get-WmiObject Win32_NTDomain}",
                    "SetScript": "\r\nWrite-Verbose \"Creating forest [$DomainNetbiosName ($DomainName)]\"\r\nImport-Module ADDSDeployment -Verbose:$false\r\nInstall-ADDSForest -DomainName $DomainName `\r\n                   -DomainNetbiosName $DomainNetbiosName `\r\n                   -ForestMode 'Win2012' `\r\n                   -DomainMode 'Win2012' `\r\n                   -SafeModeAdministratorPassword (ConvertTo-SecureString $DSRMPassPhrase -AsPlainText -Force) `\r\n                   -InstallDns `\r\n                   -DatabasePath $DatabasePath `\r\n                   -LogPath $LogPath `\r\n                   -SysvolPath $SysvolPath `\r\n                   -Force `\r\n                   -NoRebootOnCompletion `\r\n                   -ErrorAction Stop `\r\n                   -WarningAction SilentlyContinue\r\nWrite-Verbose 'Rebooting'\r\n$global:DSCMachineStatus = 1",
                    "TestScript": "\r\n$d = Get-WmiObject Win32_NTDomain\r\nif ($d.Status -eq 'OK' -AND \r\n    $d.DnsForestName -eq $DomainName -AND \r\n    $d.DomainName -eq $DomainNetbiosName -AND \r\n    $d.DomainControllerName -eq \"\\\\$env:COMPUTERNAME\")\r\n{\r\n\tWrite-Verbose \"Domain [$DomainNetbiosName ($DomainName)] already configured.\"\r\n\treturn $true\r\n}\r\nreturn $false",
                    "Type": "Script",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "SetupForest",
                    "Args": {
                        "DomainNetbiosName": "{{Domain}}",
                        "DomainName": "{{FQDN}}",
                        "DSRMPassPhrase": "{{DSRMPassPhrase}}",
                        "DatabasePath": "F:\\NTDS",
                        "LogPath": "F:\\NTDS",
                        "SysvolPath": "F:\\SYSVOL"
                    },
                    "Nodes": [],
                    "Requires": [],
                    "Description": null
                },
                {
                    "Type": "Service",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "StartADWebServices",
                    "Args": {
                        "Name": "ADWS",
                        "StartupType": "Automatic",
                        "State": "Running"
                    },
                    "Nodes": [],
                    "Requires": [
                        "[Script]SetupForest"
                    ]
                }
            ]
        },
        {
            "Name": "SetupADDomainController",
            "Description": "Configure this server as an additional Active Directory domain controller. See http://technet.microsoft.com/en-us/library/jj574134.aspx.",
            "Resources": [
                {
                    "Credential": null,
                    "GetScript": "return @{Domain = Get-WmiObject Win32_NTDomain}",
                    "SetScript": "\r\nWrite-Verbose \"Creating domain [$DomainNetbiosName ($DomainName)]\"\r\nImport-Module ADDSDeployment -Verbose:$false\r\n\r\n# Temporarily make the RootDC our DNS Server...\r\nSet-DnsClientServerAddress -InterfaceAlias 'Ethernet*' -ServerAddresses $DCRootIPAddress -Validate -ErrorAction Stop\r\n\r\nInstall-ADDSDomainController -DomainName $DomainName `\r\n                             -Credential (New-Object PsCredential($AdminUser, (ConvertTo-SecureString $AdminPass -AsPlainText -Force))) `\r\n                             -SafeModeAdministratorPassword (ConvertTo-SecureString $DSRMPassPhrase -AsPlainText -Force) `\r\n                             -InstallDns `\r\n                             -NoGlobalCatalog `\r\n                             -DatabasePath $DatabasePath `\r\n                             -LogPath $LogPath `\r\n                             -SysvolPath $SysvolPath `\r\n                             -Force `\r\n                             -NoRebootOnCompletion `\r\n                             -ErrorAction Stop `\r\n                             -WarningAction SilentlyContinue\r\n\r\n# Point the DNS server at this server...\r\nSet-DnsClientServerAddress -InterfaceAlias 'Ethernet*' -ServerAddresses '127.0.0.1' -Validate:$false\r\n\r\nWrite-Verbose 'Rebooting'\r\n$global:DSCMachineStatus = 1",
                    "TestScript": "\r\n$d = Get-WmiObject Win32_NTDomain\r\nif ($d.Status -eq 'OK' -AND \r\n    $d.DnsForestName -eq $DomainName -AND \r\n    $d.DomainName -eq $DomainNetbiosName -AND \r\n    $d.DomainControllerName -eq \"\\\\$env:COMPUTERNAME\")\r\n{\r\n\tWrite-Verbose \"Domain [$DomainNetbiosName ($DomainName)] already configured.\"\r\n\treturn $true\r\n}\r\nreturn $false",
                    "Type": "Script",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "SetupDC",
                    "Args": {
                        "DomainNetbiosName": "{{Domain}}",
                        "DomainName": "{{FQDN}}",
                        "DSRMPassPhrase": "{{DSRMPassPhrase}}",
                        "AdminUser": "{{Domain}}\\{{AdminName}}",
                        "AdminPass": "{{AdminPassword}}",
                        "DatabasePath": "F:\\NTDS",
                        "LogPath": "F:\\NTDS",
                        "SysvolPath": "F:\\SYSVOL",
                        "DCRootIPAddress": "10.0.0.4"
                    }
                },
                {
                    "Type": "Service",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "StartADWebServices",
                    "Args": {
                        "Name": "ADWS",
                        "StartupType": "Automatic",
                        "State": "Running"
                    },
                    "Requires": [
                        "[Script]SetupDC"
                    ]
                }
            ]
        },        
        {
            "Name": "InitializeSSAONode",
            "Description": "Initializes VMs in the SqlServerAlwaysOn cloud service",
            "Resources": [
                {
                    "Type": "xFormatDisks",
                    "ImportModule": "xAzureDataDisks",
                    "ImportTypeName": "ADITI_xFormatDisks",
                    "Name": "FormatRawDisks",
                    "Args": {
                        "FirstDriveLetter": "F"
                    }
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "FailoverClustering",
                    "Args": {
                        "Name": "Failover-Clustering",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-FailoverCluster.log"
                    }
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "RSATClusteringMgmt",
                    "Args": {
                        "Name": "RSAT-Clustering-Mgmt",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-RSATClusteringMgmt.log"
                    },
                    "Requires": [
                        "[WindowsFeature]FailoverClustering"
                    ]
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "RSATClusteringPowerShell",
                    "Args": {
                        "Name": "RSAT-Clustering-PowerShell",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-RSATClusteringPowershell.log"
                    },
                    "Requires": [
                        "[WindowsFeature]RSATClusteringMgmt"
                    ]
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "RSATClusteringCmdInterface",
                    "Args": {
                        "Name": "RSAT-Clustering-CmdInterface",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-RSATClusteringCmdInterface.log"
                    },
                    "Requires": [
                        "[WindowsFeature]RSATClusteringPowerShell"
                    ]
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "RSATADPowershell",
                    "Args": {
                        "Name": "RSAT-AD-Powershell",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-RSATADPowershell.log"
                    },
                    "Nodes": [
                        "{{SSAOCloudService}}.sql1"
                    ]
                },
                {
                    "Type": "xADUser",
                    "ImportModule": "xActiveDirectory",
                    "ImportTypeName": "MSFT_xADUser",
                    "Name": "CreateSqlServiceDomainAccount",
                    "Args": {
                        "DomainName": "{{FQDN}}",
                        "DomainAdministratorCredential": "%%New-Object PSCredential '{{Domain}}\\{{AdminName}}', (ConvertTo-SecureString '{{AdminPassword}}' -AsPlainText -Force)",
                        "UserName": "{{SqlSvcAccountName}}",
                        "Password": "%%New-Object PSCredential '{{Domain}}\\{{SqlSvcAccountName}}', (ConvertTo-SecureString '{{SqlSvcAccountPassword}}' -AsPlainText -Force)",
                        "Ensure": "Present"
                    },
                    "Nodes": [
                        "{{SSAOCloudService}}.sql1"
                    ],
                    "Requires": [
                        "[WindowsFeature]RSATADPowershell"
                    ]
                },                
                {
                    "Type": "File",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "CreateQuorumFolder",
                    "Args": {
                        "DestinationPath": "F:\\quorum",
                        "Type": "Directory",
                        "Ensure": "Present",
                        "Force": "False"
                    },
                    "Nodes": [
                        "{{SSAOCloudService}}.quorum"
                    ]
                },               
                {
                    "Credential": "DomainAdmin:local",
                    "Type": "Script",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "AddDomainAdminToLocalAdminGroup",
                    "GetScript": "@{ exists = (net localgroup administrators) -contains $acctname }",
                    "SetScript": "$users = (net localgroup administrators)\r\nif ($users -notcontains $acctname)\r\n{\r\n\tWrite-Verbose \"Adding [$acctname] to local administators group.\"\r\n\tnet localgroup administrators $acctname /Add | Out-Null\r\n}",
                    "TestScript": null,
                    "Args": {
                        "acctname": "{{Domain}}\\{{AdminName}}"
                    }
                }
            ]
        },
        {
            "Name": "SetupFailoverCluster",
            "Description": "Create failover cluster",
            "Resources": [
                {
                    "Type": "xAzureCluster",
                    "ImportModule": "xAzureFailOverCluster",
                    "ImportTypeName": "ADITI_xAzureCluster",
                    "Name": "CreateFailoverCluster",
                    "Args": {
                        "Name": "{{ClusterName}}",
                        "NumberOfSQLNodes": "%%{{NumberOfSQLNodes}}",
                        "DomainAdministratorCredential": "%%New-Object PSCredential '{{Domain}}\\{{AdminName}}', (ConvertTo-SecureString '{{AdminPassword}}' -AsPlainText -Force)"
                    },
                    "Nodes": [
                        "{{SSAOCloudService}}.sql1"
                    ]
                },
				{
                    "Type": "xWaitForAzureCluster",
                    "ImportModule": "xAzureFailOverCluster",
                    "ImportTypeName": "ADITI_xWaitForAzureCluster",
                    "Name": "WaitForFailoverCluster",
                    "Args": {
                        "Name": "{{ClusterName}}",
                        "RetryIntervalSec": "%%10",
                        "RetryCount": "%%100",
                        "DomainAdministratorCredential": "%%New-Object PSCredential '{{Domain}}\\{{AdminName}}', (ConvertTo-SecureString '{{AdminPassword}}' -AsPlainText -Force)"
                    }
                },
                {
                    "Type": "xSmbShare",
                    "ImportModule": "xSmbShare",
                    "ImportTypeName": "MSFT_xSmbShare",
                    "Name": "CreateQuorumShare",
                    "Args": {
                        "Name": "quorum",
                        "Path": "F:\\quorum",
                        "FullAccess": "%%\"{{Domain}}\\{{AdminName}}\",\"{{Domain}}\\{{ClusterName}}$\"",
                        "Ensure": "Present",
                        "Description": "Failover cluster [{{ClusterName}}] quorum file share"
                    },
                    "Nodes": [
                        "{{SSAOCloudService}}.quorum"
                    ],
                    "Requires": [
                        "[xWaitForAzureCluster]WaitForFailoverCluster"
                    ]
                },
				{
                    "Type": "xWaitForAzureClusterQuorumShare",
                    "ImportModule": "xAzureFailOverCluster",
                    "ImportTypeName": "ADITI_xWaitForAzureClusterQuorumShare",
                    "Name": "WaitForClusterQuorumShare",
                    "Args": {
                        "QuorumShare": "\\\\quorum\\quorum",
                        "RetryIntervalSec": "%%10",
                        "RetryCount": "%%60",
                        "DomainAdministratorCredential": "%%New-Object PSCredential '{{Domain}}\\{{AdminName}}', (ConvertTo-SecureString '{{AdminPassword}}' -AsPlainText -Force)"
                    },
                    "Nodes": [
                        "{{SSAOCloudService}}.sql1"
                    ]
                },
                {
                    "Type": "xAzureClusterQuorumMode",
                    "ImportModule": "xAzureFailOverCluster",
                    "ImportTypeName": "ADITI_xAzureClusterQuorumMode",
                    "Name": "CreateClusterQuorumNode",
                    "Args": {
                        "QuorumShare": "\\\\quorum\\quorum",
                        "DomainAdministratorCredential": "%%New-Object PSCredential '{{Domain}}\\{{AdminName}}', (ConvertTo-SecureString '{{AdminPassword}}' -AsPlainText -Force)"
                    },
                    "Nodes": [
                        "{{SSAOCloudService}}.sql1"
                    ],
                    "Requires": [
                        "[xWaitForAzureClusterQuorumShare]WaitForClusterQuorumShare"
                    ]
                }
            ]
        },
        {
            "Name": "SetupSqlAlwaysOn",
            "Description": "Setup SQL AlwaysOn",
            "Resources": [
                {
                    "Type": "xFirewall",
                    "ImportModule": "xNetworking",
                    "ImportTypeName": "MSFT_xFirewall",
                    "Name": "SqlServerTcpInRule",
                    "Args": {
                        "Name": "SQLServerTCPIn",
                        "Description": "SQL Server (TCP In)",
                        "LocalPort": "1433",
                        "Protocol": "TCP",
                        "Access": "Allow",
                        "State": "Enabled",
                        "Direction": "Inbound"
                    },
                    "Nodes": [],
                    "Requires": [],
                    "Description": null
                },
                {
                    "Type": "xFirewall",
                    "ImportModule": "xNetworking",
                    "ImportTypeName": "MSFT_xFirewall",
                    "Name": "SqlServerHAReplicaRule",
                    "Args": {
                        "Name": "SQLServerHAReplica",
                        "Description": "SQL High Availability Replica Endpoint",
                        "LocalPort": "5022",
                        "Protocol": "TCP",
                        "Access": "Allow",
                        "State": "Enabled",
                        "Direction": "Inbound"
                    },
                    "Nodes": [],
                    "Requires": [],
                    "Description": null
                },
                {
                    "Type": "xFirewall",
                    "ImportModule": "xNetworking",
                    "ImportTypeName": "MSFT_xFirewall",
                    "Name": "SqlServerLoadBalancedEndpointRule",
                    "Args": {
                        "Name": "SQL AG Listener LB Probe (TCP-In)",
                        "Description": "SQL AG Listener LB Probe (TCP-In)",
                        "LocalPort": "59999",
                        "Protocol": "TCP",
                        "Access": "Allow",
                        "State": "Enabled",
                        "Direction": "Inbound"
                    }
                },
                {
                    "Credential": "DomainAdmin:local",
                    "Type": "Script",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "ConfigureSqlDbaAccount",
                    "GetScript": "@{ SqlSvrAdminAcct = Invoke-SqlCmd -Query \"exec sp_helpsrvrolemember 'sysadmin'\" -ServerInstance '.' -EA Continue | where MemberName -eq 'sa' }",
                    "SetScript": "[System.Reflection.Assembly]::LoadWithPartialName('Microsoft.SqlServer.SMO')\r\n$s = new-object ('Microsoft.SqlServer.Management.Smo.Server') $env:COMPUTERNAME\r\n$s.Settings.LoginMode = [Microsoft.SqlServer.Management.SMO.ServerLoginMode]::Mixed\r\n$s.Alter()\r\n$list = Get-Service -Name MSSQL*\r\nforeach ($s in $list)\r\n{\r\n   Set-Service -Name $s.Name -StartupType Automatic\r\n   if ($s.Status -ne \"Stopped\")\r\n   {\r\n       $s.Stop()\r\n       $s.WaitForStatus(\"Stopped\")\r\n       $s.Refresh()\r\n   }\r\n   if ($s.Status -ne \"Running\")\r\n   {\r\n      $s.Start()\r\n      $s.WaitForStatus(\"Running\")\r\n      $s.Refresh()\r\n   }\r\n}\r\nInvoke-SqlCmd -Query \"ALTER LOGIN sa ENABLE\" -ServerInstance \".\"\r\nInvoke-SqlCmd -Query \"ALTER LOGIN sa WITH PASSWORD = '$SqlAdminPassword'\" -ServerInstance \".\"\r\n",
                    "TestScript": null,
                    "Args": {
                        "SqlAdminPassword": "{{SqlAdminPassword}}"
                    },
                    "Nodes": [],
                    "Requires": [
                        "[xFirewall]SqlServerTcpInRule",
                        "[xFirewall]SqlServerHAReplicaRule",
                        "[xFirewall]SqlServerLoadBalancedEndpointRule"
                    ],
                    "Description": "Enables SQL authentication and the built-in sa account"
                },
                {
                    "Type": "xSqlHAService",
                    "ImportModule": "xAzureAvailabilityGroup",
                    "ImportTypeName": "MSFT_xSqlHAService",
                    "Name": "EnableSqlAlwaysOn",
                    "Args": {
                        "InstanceName": "%%$env:COMPUTERNAME",
                        "SqlAdministratorCredential": "%%New-Object PSCredential 'sa', (ConvertTo-SecureString '{{SqlAdminPassword}}' -AsPlainText -Force)",
                        "ServiceCredential": "%%New-Object PSCredential '{{Domain}}\\{{SqlSvcAccountName}}', (ConvertTo-SecureString '{{AdminPassword}}' -AsPlainText -Force)"
                    },
                    "Nodes": [],
                    "Requires": [
                        "[Script]ConfigureSqlDbaAccount"
                    ]
                },
                {
                    "Credential": "DomainAdmin:local",
                    "Type": "Script",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "CreateSqlAlwaysOnEndpoint",
                    "GetScript": "@{ ServerInstance = $env:COMPUTERNAME; AllowedUser = $ServiceAccount; EndPointName = $EndPointName; PortNumber = $EndPointPort; Configured = [bool] [int](OSQL -S $InstanceName -E -Q \"select count(*) from master.sys.endpoints where name = '$EndPointName'\" -h-1)[0] }",
                    "SetScript": "\r\n$serverPath   = \"SQLSERVER:\\SQL\\$env:COMPUTERNAME\\Default\"\r\n$endpointPath = \"$serverPath\\Endpoints\\$EndpointName\"\r\nNew-SqlHadrEndpoint -Path $serverPath -Name $EndPointName -Port $EndPointPort -EA Stop | Out-Null\r\nWrite-Verbose \"Created Endpoint [$endpointName] on port [$endpointPort]\"\r\nSet-SqlHadrEndpoint -Path $endpointPath -State \"Started\" -EA Continue | Out-Null\r\nWrite-Verbose \"Starting Endpoint [$EndPointName] (if not already started)\"\r\nInvoke-SqlCmd -Query \"GRANT CONNECT ON ENDPOINT::[$EndPointName] TO [$SqlServiceAccount]\" -ServerInstance $env:COMPUTERNAME\r\nWrite-Verbose \"Granting endpoint connect permissions to [$SqlServiceAccount]\"",
                    "TestScript": "$endpoint = OSQL -S $env:COMPUTERNAME -E -Q \"select count(*) from master.sys.endpoints where name = '$EndPointName'\" -h-1\r\nreturn ([bool] [int] $endpoint[0].Trim() )",
                    "Args": {
						"EndPointName": "MyMirroringEndpoint",
						"EndPointPort": "%%5022",
                        "SqlServiceAccount": "{{Domain}}\\{{SqlSvcAccountName}}"
                    },
                    "Requires": [
                        "[xSqlHAService]EnableSqlAlwaysOn"
                    ],
                    "Description": "Creates SQL Server mirroring endpoint for participating in availability group."
                },
                {
                    "Type": "xSqlHAGroup",
                    "ImportModule": "xAzureAvailabilityGroup",
                    "ImportTypeName": "ADITI_xSqlHAGroup",
                    "Name": "CreateAvailabilityGroup",
                    "Args": {
                        "Name": "{{AvailabilityGroupName}}",
                        "NumberOfSQLNodes": "{{NumberOfSQLNodes}}",
                        "SQLNodeNamePrefix": "sql",
                        "EndpointPort": "%%5022",
                        "SqlAdministratorCredential": "%%New-Object PSCredential 'sa', (ConvertTo-SecureString '{{SqlAdminPassword}}' -AsPlainText -Force)"
                    },
                    "Nodes": [
                        "{{SSAOCloudService}}.sql1"
                    ],
                    "Requires": [
                        "[Script]CreateSqlAlwaysOnEndpoint"
                    ]
                },
                {
                    "Type": "xAzureAvailabilityGroupListener",
                    "ImportModule": "xAzureAvailabilityGroupListener",
                    "ImportTypeName": "ADITI_xAzureAvailabilityGroupListener",
                    "Name": "CreateAGListener",
                    "Args": {
                        "Name": "{{AvailabilityGroupName}}Listener",
                        "ServiceName": "{{SSAOCloudService}}",
                        "AvailabilityGroupName": "{{AvailabilityGroupName}}",
                        "SqlAdministratorCredential": "%%New-Object PSCredential 'sa', (ConvertTo-SecureString '{{SqlAdminPassword}}' -AsPlainText -Force)",
                        "DomainAdministratorCredential": "%%New-Object PSCredential '{{Domain}}\\{{AdminName}}', (ConvertTo-SecureString '{{AdminPassword}}' -AsPlainText -Force)"
                    },
                    "Nodes": [
                        "{{SSAOCloudService}}.sql1"
                    ],
                    "Requires": [
                        "[xSqlHAGroup]CreateAvailabilityGroup"
                    ]
                }
            ]
        },
		{
            "Name": "SetupSharepointFarm",
            "Description": "SharePoint farm setup.",
            "Resources": [
                {
                    "Type": "xFormatDisks",
                    "ImportModule": "xAzureDataDisks",
                    "ImportTypeName": "ADITI_xFormatDisks",
                    "Name": "FormatRawDisks",
                    "Args": {
                        "FirstDriveLetter": "F"
                    }
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "RSATADPowershell",
                    "Args": {
                        "Name": "RSAT-AD-Powershell",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-RSATADPowershell.log"
                    }
                },
                {
                    "Type": "xADUser",
                    "ImportModule": "xActiveDirectory",
                    "ImportTypeName": "MSFT_xADUser",
                    "Name": "CreateSharepointFarmAdminDomainAccount",
                    "Args": {
                        "DomainName": "{{FQDN}}",
                        "DomainAdministratorCredential": "%%New-Object PSCredential '{{Domain}}\\{{AdminName}}', (ConvertTo-SecureString '{{AdminPassword}}' -AsPlainText -Force)",
                        "UserName": "{{FarmAdminName}}",
                        "Password": "%%New-Object PSCredential '{{Domain}}\\{{FarmAdminName}}', (ConvertTo-SecureString '{{FarmAdminPassword}}' -AsPlainText -Force)",
                        "Ensure": "Present"
                    },
                    "Requires": [
                        "[WindowsFeature]RSATADPowershell"
                    ]
                },
                {
                    "Credential": "DomainAdmin:local",
                    "Type": "Script",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "AddSharepointFarmAdminToLocalAdminGroup",
                    "GetScript": "@{ exists = (net localgroup administrators) -contains $acctname }",
                    "SetScript": "$users = (net localgroup administrators)\r\nif ($users -notcontains $acctname)\r\n{\r\n\tWrite-Verbose \"Adding [$acctname] to local administators group.\"\r\n\tnet localgroup administrators $acctname /Add | Out-Null\r\n}",
                    "TestScript": null,
                    "Args": {
                        "acctname": "{{Domain}}\\{{FarmAdminName}}"
                    }
                },
                {
                    "Type": "xSharePointAccounts",
                    "ImportModule": "xAzureSharePointFarm",
                    "ImportTypeName": "ADITI_xSharePointAccounts",
                    "Name": "CreateSharepointAccounts",
                    "Args": {
                        "OuName": "SP_Accounts",
                        "FarmAdminPassword": "{{FarmAdminPassword}}",
                        "DomainAdministratorCredential": "%%New-Object PSCredential '{{Domain}}\\{{AdminName}}', (ConvertTo-SecureString '{{AdminPassword}}' -AsPlainText -Force)"
                    },
                    "Nodes": [
                        "{{SharepointCloudService}}.spapp1"
                    ],
                    "Requires": [
                        "[xADUser]CreateSharepointFarmAdminDomainAccount"
                    ]
                },
                {
                    "Type": "xSharePointFarm",
                    "ImportModule": "xAzureSharePointFarm",
                    "ImportTypeName": "ADITI_xSharePointFarm",
                    "Name": "CreateSharepointFarm",
                    "Args": {
                        "FarmAdmin": "{{Domain}}\\{{FarmAdminName}}",
                        "FarmAdminPassword": "{{FarmAdminPassword}}",
                        "FarmPassPhrase": "{{FarmPassPhrase}}",
                        "DbServer": "{{AvailabilityGroupName}}Listener",
                        "ConfigurationDbName": "SP_Config",
                        "CAContentDbName": "SP_Content_Admin",
                        "SqlAdministratorCredential": "%%New-Object PSCredential 'sa', (ConvertTo-SecureString '{{SqlAdminPassword}}' -AsPlainText -Force)"
                    },
					"Nodes": [
                        "{{SharepointCloudService}}.spapp1"
                    ],
                    "Requires": [
                        "[Script]AddSharepointFarmAdminToLocalAdminGroup"
                    ]
                },
				{
                    "Type": "xWaitAndJoinSharePointFarm",
                    "ImportModule": "xAzureSharePointFarm",
                    "ImportTypeName": "ADITI_xWaitAndJoinSharePointFarm",
                    "Name": "JoinSharepointFarm",
                    "Args": {
                        "FarmAdmin": "{{Domain}}\\{{FarmAdminName}}",
                        "FarmAdminPassword": "{{FarmAdminPassword}}",
                        "FarmPassPhrase": "{{FarmPassPhrase}}",
                        "DbServer": "{{AvailabilityGroupName}}Listener",
                        "ConfigurationDbName": "SP_Config",
                        "CAContentDbName": "SP_Content_Admin",
                        "LogLocation": "F:\\Logs",
                        "LogDiskSpaceUsageGB": "%%4",
						"RetryIntervalSec": "%%180",
                        "RetryCount": "%%15",
                        "SqlAdministratorCredential": "%%New-Object PSCredential 'sa', (ConvertTo-SecureString '{{SqlAdminPassword}}' -AsPlainText -Force)"
                    },
                    "Requires": [
                        "[Script]AddSharepointFarmAdminToLocalAdminGroup"
                    ]
                },
				{
                    "Type": "xSharePointCentralAdmin",
                    "ImportModule": "xAzureSharePointFarm",
                    "ImportTypeName": "ADITI_xSharePointCentralAdmin",
                    "Name": "ProvisionCentralAdmin",
                    "Args": {
                        "CAWebPort": "%%20000",
                        "AltUrl": "http://{{SharepointCloudService}}.cloudapp.net:20000",
                        "FarmAdministratorCredential": "%%New-Object PSCredential '{{Domain}}\\{{FarmAdminName}}', (ConvertTo-SecureString '{{FarmAdminPassword}}' -AsPlainText -Force)"
                    },
                    "Nodes": [
                        "{{SharepointCloudService}}.spapp1"
                    ]
                },
				{
                    "Type": "xSharePointManagedAccounts",
                    "ImportModule": "xAzureSharePointFarm",
                    "ImportTypeName": "ADITI_xSharePointManagedAccounts",
                    "Name": "CreateManagedAccounts",
                    "Args": {
                        "FarmAdmin": "{{Domain}}\\{{FarmAdminName}}",
                        "FarmAdminPassword": "{{FarmAdminPassword}}",
                        "DomainName": "{{Domain}}"
                    }
                }
            ]
        },		
        {
            "Name": "ProvisionHighlyAvailableDefaultSite",
            "Description": "Creates a blank site for quickly publishing web pages and enables high availability by adding the SharePoint DBs to SQL Server Availability Group.",
            "Resources": [
                {
                    "Type": "xSharePointWebApplication",
                    "ImportModule": "xAzureSharePointFarm",
                    "ImportTypeName": "ADITI_xSharePointWebApplication",
                    "Name": "CreateWebApplication",
                    "Args": {
                        "WebAppName": "PublishingSite",
                        "AppPoolName": "WebApplication Pool",
                        "AppPoolAccount": "{{Domain}}\\SP_WebAppPool",
                        "SiteUrl": "http://{{SharepointCloudService}}.cloudapp.net",
                        "Port": "%%80",
                        "ProbePort": "%%8080",
                        "SiteName": "Blank Publishing Site",
                        "SiteTemplate": "BLANKINTERNET#0",
                        "SiteOwner": "{{Domain}}\\{{FarmAdminName}}",
                        "FarmAdministratorCredential": "%%New-Object PSCredential '{Domain}}\\{{FarmAdminName}}', (ConvertTo-SecureString '{{FarmAdminPassword}}' -AsPlainText -Force)",
                        "SqlAdministratorCredential": "%%New-Object PSCredential 'sa', (ConvertTo-SecureString '{{SqlAdminPassword}}' -AsPlainText -Force)"
                    }
                },
				{
                    "Type": "File",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "CreateBackupFolder",
                    "Args": {
                        "DestinationPath": "F:\\backup",
                        "Type": "Directory",
                        "Ensure": "Present",
                        "Force": "False"
                    },
                    "Nodes": [
                        "{{SharepointCloudService}}.spweb1"
                    ]
                },
                {
                    "Type": "xSmbShare",
                    "ImportModule": "xSmbShare",
                    "ImportTypeName": "MSFT_xSmbShare",
                    "Name": "CreateBackupShare",
                    "Args": {
                        "Name": "backup",
                        "Path": "F:\\backup",
                        "FullAccess": "everyone",
                        "Ensure": "Present",
                        "Description": "SharePoint databases backup folder"
                    },
                    "Nodes": [
                        "{{SharepointCloudService}}.spweb1"
                    ],
                    "Requires": [
                        "[File]CreateBackupFolder"
                    ]
                },
				{
					"Type": "Package",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "SqlODBC",
                    "Args": {
                        "Path": "http://download.microsoft.com/download/5/7/2/57249A3A-19D6-4901-ACCE-80924ABEB267/1033/x64/msodbcsql.msi",
                        "Name": "Microsoft ODBC Driver 11 for SQL Server",
						"ProductId": "",
						"Arguments":"IACCEPTMSODBCSQLLICENSETERMS=YES",
                        "Ensure": "Present"
                    },
                    "Nodes": [
                        "{{SharepointCloudService}}.spweb1"
                    ]
				},
				{
					"Type": "Package",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "SqlCmdTool",
                    "Args": {
                        "Path":"http://download.microsoft.com/download/5/5/B/55BEFD44-B899-4B54-ACD7-506E03142B34/1033/x64/MsSqlCmdLnUtils.msi",
                        "Name": "Microsoft Command Line Utilities 11 for SQL Server",
						"ProductId": "",
						"Arguments": "IACCEPTMSSQLCMDLNUTILSLICENSETERMS=YES",
                        "Ensure": "Present"
                    },
                    "Nodes": [
                        "{{SharepointCloudService}}.spweb1"
                    ],
                    "Requires": [
                        "[Package]SqlODBC"
                    ]
				},               
                {
                    "Type": "xSharePointDatabasesHighAvailability",
                    "ImportModule": "xAzureSharePointFarm",
                    "ImportTypeName": "ADITI_xSharePointDatabasesHighAvailability",
                    "Name": "MakeSharepointDatabasesHighlyAvailable",
                    "Args": {
                        "AvailabilityGroupName": "{{AvailabilityGroupName}}",
                        "SQLNodeNamePrefix": "sql",
                        "NumberOfSQLNodes": "{{NumberOfSQLNodes}}",
                        "DatabaseBackupPath": "%%\"\\\\$env:COMPUTERNAME\\backup\"",
                        "FarmAdministratorCredential": "%%New-Object PSCredential '{{Domain}}\\{{FarmAdminName}}', (ConvertTo-SecureString '{{FarmAdminPassword}}' -AsPlainText -Force)",
                        "SqlAdministratorCredential": "%%New-Object PSCredential 'sa', (ConvertTo-SecureString '{{SqlAdminPassword}}' -AsPlainText -Force)"
                    },
                    "Nodes": [
                        "{{SharepointCloudService}}.spweb1"
                    ],
                    "Requires": [
                        "[xSmbShare]CreateBackupShare",
                        "[Package]SqlCmdTool"
                    ]
                }
            ]
        }
    ]
}